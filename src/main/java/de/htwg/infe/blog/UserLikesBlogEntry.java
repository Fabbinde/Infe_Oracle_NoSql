/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package de.htwg.infe.blog;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserLikesBlogEntry extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserLikesBlogEntry\",\"namespace\":\"de.htwg.infe.blog\",\"fields\":[{\"name\":\"user\",\"type\":{\"type\":\"record\",\"name\":\"User\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"mail\",\"type\":\"string\"},{\"name\":\"bild\",\"type\":\"string\"}]}},{\"name\":\"blogEntry\",\"type\":{\"type\":\"record\",\"name\":\"BlogEntry\",\"fields\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"author\",\"type\":\"User\"},{\"name\":\"text\",\"type\":\"string\",\"default\":\"text\"},{\"name\":\"datum\",\"type\":\"long\",\"default\":0},{\"name\":\"titel\",\"type\":\"string\",\"default\":\"title\"},{\"name\":\"tag\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public de.htwg.infe.blog.User user;
  @Deprecated public de.htwg.infe.blog.BlogEntry blogEntry;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UserLikesBlogEntry() {}

  /**
   * All-args constructor.
   */
  public UserLikesBlogEntry(de.htwg.infe.blog.User user, de.htwg.infe.blog.BlogEntry blogEntry) {
    this.user = user;
    this.blogEntry = blogEntry;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return user;
    case 1: return blogEntry;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: user = (de.htwg.infe.blog.User)value$; break;
    case 1: blogEntry = (de.htwg.infe.blog.BlogEntry)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'user' field.
   */
  public de.htwg.infe.blog.User getUser() {
    return user;
  }

  /**
   * Sets the value of the 'user' field.
   * @param value the value to set.
   */
  public void setUser(de.htwg.infe.blog.User value) {
    this.user = value;
  }

  /**
   * Gets the value of the 'blogEntry' field.
   */
  public de.htwg.infe.blog.BlogEntry getBlogEntry() {
    return blogEntry;
  }

  /**
   * Sets the value of the 'blogEntry' field.
   * @param value the value to set.
   */
  public void setBlogEntry(de.htwg.infe.blog.BlogEntry value) {
    this.blogEntry = value;
  }

  /** Creates a new UserLikesBlogEntry RecordBuilder */
  public static de.htwg.infe.blog.UserLikesBlogEntry.Builder newBuilder() {
    return new de.htwg.infe.blog.UserLikesBlogEntry.Builder();
  }
  
  /** Creates a new UserLikesBlogEntry RecordBuilder by copying an existing Builder */
  public static de.htwg.infe.blog.UserLikesBlogEntry.Builder newBuilder(de.htwg.infe.blog.UserLikesBlogEntry.Builder other) {
    return new de.htwg.infe.blog.UserLikesBlogEntry.Builder(other);
  }
  
  /** Creates a new UserLikesBlogEntry RecordBuilder by copying an existing UserLikesBlogEntry instance */
  public static de.htwg.infe.blog.UserLikesBlogEntry.Builder newBuilder(de.htwg.infe.blog.UserLikesBlogEntry other) {
    return new de.htwg.infe.blog.UserLikesBlogEntry.Builder(other);
  }
  
  /**
   * RecordBuilder for UserLikesBlogEntry instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserLikesBlogEntry>
    implements org.apache.avro.data.RecordBuilder<UserLikesBlogEntry> {

    private de.htwg.infe.blog.User user;
    private de.htwg.infe.blog.BlogEntry blogEntry;

    /** Creates a new Builder */
    private Builder() {
      super(de.htwg.infe.blog.UserLikesBlogEntry.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(de.htwg.infe.blog.UserLikesBlogEntry.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.blogEntry)) {
        this.blogEntry = data().deepCopy(fields()[1].schema(), other.blogEntry);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UserLikesBlogEntry instance */
    private Builder(de.htwg.infe.blog.UserLikesBlogEntry other) {
            super(de.htwg.infe.blog.UserLikesBlogEntry.SCHEMA$);
      if (isValidValue(fields()[0], other.user)) {
        this.user = data().deepCopy(fields()[0].schema(), other.user);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.blogEntry)) {
        this.blogEntry = data().deepCopy(fields()[1].schema(), other.blogEntry);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'user' field */
    public de.htwg.infe.blog.User getUser() {
      return user;
    }
    
    /** Sets the value of the 'user' field */
    public de.htwg.infe.blog.UserLikesBlogEntry.Builder setUser(de.htwg.infe.blog.User value) {
      validate(fields()[0], value);
      this.user = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'user' field has been set */
    public boolean hasUser() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'user' field */
    public de.htwg.infe.blog.UserLikesBlogEntry.Builder clearUser() {
      user = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'blogEntry' field */
    public de.htwg.infe.blog.BlogEntry getBlogEntry() {
      return blogEntry;
    }
    
    /** Sets the value of the 'blogEntry' field */
    public de.htwg.infe.blog.UserLikesBlogEntry.Builder setBlogEntry(de.htwg.infe.blog.BlogEntry value) {
      validate(fields()[1], value);
      this.blogEntry = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'blogEntry' field has been set */
    public boolean hasBlogEntry() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'blogEntry' field */
    public de.htwg.infe.blog.UserLikesBlogEntry.Builder clearBlogEntry() {
      blogEntry = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    //@Override
    public UserLikesBlogEntry build() {
      try {
        UserLikesBlogEntry record = new UserLikesBlogEntry();
        record.user = fieldSetFlags()[0] ? this.user : (de.htwg.infe.blog.User) defaultValue(fields()[0]);
        record.blogEntry = fieldSetFlags()[1] ? this.blogEntry : (de.htwg.infe.blog.BlogEntry) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
